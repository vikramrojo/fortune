fieldset {
  border: solid var(--fieldset-border-width) var(--fieldset-border-color);
  border-radius: var(--fieldset-border-radius);
  padding: var(--fieldset-padding-y) var(--fieldset-padding-x);
  margin-bottom: 1.5rem;

  & legend {
    font-weight: var(--font-weight-bold);
    padding: 0 .25rem;
  }

  & > :last-child {
    margin-bottom: 0;
  }
}

label {
  color: var(--label-color);
  display: inline-block;
  margin-bottom: .25rem;

  & + label {
    margin-left: 1rem;
  }
}

input:not([type=checkbox]):not([type=radio]):not([type=submit]):not([type=color]):not([type=button]):not([type=reset]),
select,
textarea,
textarea[type=text] {
  width: 100%;
  font-family: var(--input-font-family);
  font-size: var(--input-font-size);
  font-weight: var(--input-font-weight);
  color: var(--input-color);
  border: solid var(--input-border-width) var(--input-border-color);
  border-radius: var(--input-border-radius);
  background-color: var(--input-bg-color);
  line-height: var(--line-height);
  vertical-align: middle;
  display: block;
  padding: var(--gap-4) var(--gap-4);
  margin: 0;
  transition: var(--component-speed) border-color, var(--component-speed) background-color, var(--component-speed) color;
  white-space: nowrap;
  -moz-appearance: none;
  -webkit-appearance: none;

  &:focus {
    outline: none;
    border-color: var(--input-focus-color);
  }

  &[disabled] {
    opacity: .5;
    cursor: not-allowed;
  }

  &[readonly] {
    background-color: var(--input-readonly-bg-color);
  }

  &[type="color"] {
    padding: var(--gap-4);

    &::-webkit-color-swatch-wrapper {
      padding: 0;
    }

    &::-webkit-color-swatch {
      border: none;
      border-radius: var(--input-border-radius);
    }
  }
}

input[type="checkbox"],
input[type="radio"] {
  vertical-align: var(--gap-1);
}

select {
  position: relative;
  background-image: url("data:image/svg+xml, %3C%3Fxml version='1.0' encoding='UTF-8'%3F%3E%3Csvg width='41px' height='26px' viewBox='0 0 41 26' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Cdefs%3E%3C/defs%3E%3Cg id='Page-1' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Cpolygon id='Path-3' fill='%23000000' points='0 5.38215461 19.9830489 25.3652035 40.1398855 5.20836689 34.9315186 0 19.8691842 15.0623344 4.83971338 0.0328636246'%3E%3C/polygon%3E%3C/g%3E%3C/svg%3E%0A");
  background-position: right var(--gap-4) center;
  background-repeat: no-repeat;
  background-size: var(--gap-5);
  padding-top: 0;
  padding-bottom: 0;
  padding-right: var(--gap-3);
}

textarea {
  height: auto;
  resize: vertical;
  line-height: var(--line-height);
  white-space: normal;
}

.input-field {
  margin-bottom: var(--space-2);
}

.input-group {
  width: 100%;
  display: flex;
  margin-bottom: var(--space-2);

  & > input,
  & > button,
  & > .button,
  & > .dropdown button,
  & > .dropdown .button,
  & > .file-button label,
  & > .input-icon input,
  & > .input-icon select {
    border-radius: 0;
  }

  & > input:first-child,
  & > button:first-child,
  & > .button:first-child,
  & > .dropdown:first-child button,
  & > .dropdown:first-child .button,
  & > .file-button:first-child label,
  & > .input-icon:first-child input,
  & > .input-icon:first-child select {
    border-top-left-radius: var(--input-border-radius);
    border-bottom-left-radius: var(--input-border-radius);
  }

  & > input:last-child,
  & > button:last-child,
  & > .button:last-child,
  & > .dropdown:last-child button,
  & > .dropdown:last-child .button,
  & > .file-button:last-child label,
  & > .input-icon:last-child input,
  & > .input-icon:last-child select {
    border-top-right-radius: var(--input-border-radius);
    border-bottom-right-radius: var(--input-border-radius);
  }

  & > input + input {
    border-left-width: 0;
  }

  & > input + input:focus {
    border-left-width: var(--input-border-width);
    margin-left: calc(var(--input-border-width) * -1);
  }

  /* Force a new stacking context so focus rings don't get truncated by adjacent elements */
  & button:focus,
  & .button:focus,
  & .file-button input[type="file"]:focus + label {
    transform: translateZ(0);
  }
}

.input-hint {
  font-size: var(--input-hint-font-size);
  color: var(--input-hint-color);
  margin: 0 0 0 0;
  display: block;
}

.input-group + .input-hint {
  margin-top: calc(-1 * var(--space-2)); /* input group margin - input hint margin */
  margin-bottom: 1.5rem;
}

.input-addon {
  font-size: var(--input-font-size);
  line-height: var(--line-height);
  border-top: solid var(--input-border-width) var(--input-border-color);
  border-bottom: solid var(--input-border-width) var(--input-border-color);
  background: var(--input-addon-bg-color);
  color: var(--input-addon-color);
  padding: var(--gap-4) var(--gap-4);
  white-space: nowrap;

  &:first-child {
    border-left: solid var(--input-border-width) var(--input-border-color);
    border-top-left-radius: var(--input-border-radius);
    border-bottom-left-radius: var(--input-border-radius);
  }

  &:last-child {
    border-right: solid var(--input-border-width) var(--input-border-color);
    border-top-right-radius: var(--input-border-radius);
    border-bottom-right-radius: var(--input-border-radius);
  }
}

.input-icon {
  position: relative;
  width: 100%;

  & select {
    position: static;
  }

  & input:not(:first-child),
  & select:not(:first-child) {
    padding-left: var(--input-icon-width);
  }

  & input:not(:last-child) {
    padding-right: var(--input-icon-width);
  }

  & :first-child:not(input, select),
  & :last-child:not(input, select) {
    position: absolute;
    top: 0;
    left: var(--input-icon-offset);
    line-height: var(--line-height);
    color: var(--input-icon-color);
    vertical-align: middle;
    pointer-events: none;
  }

  & :last-child:not(input, select) {
    left: auto;
    right: var(--input-icon-offset);
  }
}

.input-invalid {
  & label {
    color: var(--input-invalid-color) !important;
  }

  & input,
  & select,
  & textarea {
    color: var(--input-invalid-color) !important;
    border-color: var(--input-invalid-border-color) !important;
  }

  & .input-icon :first-child:not(input, select),
  & .input-icon :last-child:not(input, select) {
    color: var(--input-invalid-color);
  }
}

.input-valid {
  & label {
    color: var(--input-valid-color) !important;
  }

  & input,
  & select,
  & textarea {
    color: var(--input-valid-color) !important;
    border-color: var(--input-valid-border-color) !important;
  }

  & .input-icon :first-child:not(input, select),
  & .input-icon :last-child:not(input, select) {
    color: var(--input-valid-color);
  }
}
